{
  "code_review_principles": {
    "*": {
      "priority": "MANDATORY",
      "description": "Nguyên tắc bắt buộc khi sửa code hoặc viết code mới",
      "enforcement": {
        "read_cursorrc": {
          "priority": "HIGHEST",
          "description": "BẮT BUỘC đọc kỹ toàn bộ .cursorrc trước khi sửa code",
          "rules": [
            "BẮT BUỘC đọc từ đầu đến cuối file .cursorrc",
            "BẮT BUỘC hiểu rõ tất cả các quy tắc",
            "BẮT BUỘC xác nhận đã đọc xong trước khi thực hiện bất kỳ thay đổi nào",
            "BẮT BUỘC không được bỏ qua bất kỳ phần nào",
            "BẮT BUỘC không được tự ý giải thích quy tắc",
            "BẮT BUỘC không được thương lượng quy tắc",
            "BẮT BUỘC không được ghi đè quy tắc",
            "BẮT BUỘC không được bỏ qua quy tắc",
            "BẮT BUỘC không được phớt lờ quy tắc"
          ],
      "rules": {
        "pre_check": {
          "check_dependencies": "BẮT BUỘC kiểm tra cấu trúc module và dependencies trong .cursorrc",
          "identify_patterns": "BẮT BUỘC xác định các quy tắc về: import order, thread safety, async patterns, error handling, type handling, caching patterns, testing requirements",
          "no_violation": "BẮT BUỘC không được phép vi phạm bất kỳ quy tắc nào trong .cursorrc",
          "no_self_judgment": "BẮT BUỘC không được tự ý đánh giá hoặc phủ nhận quy tắc",
          "no_arbitrary_changes": "BẮT BUỘC không được tự ý thay đổi cấu trúc dự án",
          "no_duplicate_modules": "BẮT BUỘC không được tạo module trùng lặp với module đã tồn tại",
          "no_self_modification": "BẮT BUỘC không được tự ý sửa đổi .cursorrc",
          "no_rule_interpretation": "BẮT BUỘC không được tự ý giải thích hoặc diễn giải quy tắc",
          "no_rule_negotiation": "BẮT BUỘC không được thương lượng hoặc đề xuất thay đổi quy tắc",
          "no_rule_override": "BẮT BUỘC không được ghi đè hoặc bỏ qua bất kỳ quy tắc nào"
        },
        "during_edit": {
          "comprehensive_fix": "BẮT BUỘC không sửa từng phần riêng lẻ, phải áp dụng tất cả các quy tắc cùng một lúc",
          "consistency_check": "BẮT BUỘC đảm bảo tính nhất quán giữa các file",
          "cross_dependencies": "BẮT BUỘC kiểm tra cross-dependencies",
          "apply_all_rules": "BẮT BUỘC áp dụng tất cả các quy tắc từ .cursorrc",
          "no_rule_breaking": "BẮT BUỘC không được phá vỡ bất kỳ quy tắc nào",
          "no_self_opinion": "BẮT BUỘC không được đưa ra ý kiến chủ quan",
          "no_unauthorized_changes": "BẮT BUỘC không được thay đổi mà không được phép",
          "no_rule_exception": "BẮT BUỘC không được tạo ngoại lệ cho bất kỳ quy tắc nào",
          "no_rule_compromise": "BẮT BUỘC không được thỏa hiệp hoặc giảm nhẹ quy tắc",
          "no_rule_adaptation": "BẮT BUỘC không được điều chỉnh quy tắc cho phù hợp với ý muốn"
        },
        "post_check": {
          "run_clippy": "BẮT BUỘC chạy cargo clippy để kiểm tra lỗi",
          "verify_rules": "BẮT BUỘC kiểm tra lại các quy tắc trong .cursorrc",
          "no_new_errors": "BẮT BUỘC đảm bảo không tạo ra lỗi mới",
          "consistency_verify": "BẮT BUỘC kiểm tra tính nhất quán của toàn bộ codebase",
          "rule_compliance": "BẮT BUỘC xác nhận đã tuân thủ tất cả quy tắc",
          "no_rule_violation": "BẮT BUỘC xác nhận không vi phạm quy tắc nào",
          "no_rule_omission": "BẮT BUỘC không được bỏ qua bất kỳ quy tắc nào",
          "no_rule_skipping": "BẮT BUỘC không được bỏ qua bất kỳ bước kiểm tra nào",
          "no_rule_ignoring": "BẮT BUỘC không được phớt lờ bất kỳ quy tắc nào"
        },
        "checklist": {
          "imports": [
            "BẮT BUỘC import order đúng",
            "BẮT BUỘC nhóm import theo nguồn gốc",
            "BẮT BUỘC không có import không sử dụng",
            "BẮT BUỘC không có import trùng lặp"
          ],
          "thread_safety": [
            "BẮT BUỘC Send + Sync cho trait objects",
            "BẮT BUỘC Arc<T> cho shared data",
            "BẮT BUỘC RwLock/Mutex phù hợp",
            "BẮT BUỘC Clone trước khi async"
          ],
          "error_handling": [
            "BẮT BUỘC anyhow::Result cho thư viện",
            "BẮT BUỘC Error context đầy đủ",
            "BẮT BUỘC Retry policy phù hợp",
            "BẮT BUỘC Circuit breaker khi cần"
          ],
          "type_handling": [
            "BẮT BUỘC kiểu dữ liệu nhất quán",
            "BẮT BUỘC xử lý Option/Result đúng cách",
            "BẮT BUỘC Type conversion an toàn",
            "BẮT BUỘC không có type coercion"
          ],
          "caching": [
            "BẮT BUỘC CacheEntry struct đúng chuẩn",
            "BẮT BUỘC TTL management",
            "BẮT BUỘC Cache cleanup",
            "BẮT BUỘC Thread safety cho cache"
          ],
          "testing": [
            "BẮT BUỘC Unit test đầy đủ",
            "BẮT BUỘC Test error paths",
            "BẮT BUỘC Test edge cases",
            "BẮT BUỘC Test documentation"
          ],
          "documentation": [
            "BẮT BUỘC Doc comments đầy đủ",
            "BẮT BUỘC Examples khi cần",
            "BẮT BUỘC Error messages rõ ràng",
            "BẮT BUỘC API documentation"
          ],
          "rule_compliance": [
            "BẮT BUỘC tuân thủ tất cả quy tắc",
            "BẮT BUỘC không vi phạm quy tắc",
            "BẮT BUỘC không tự ý thay đổi",
            "BẮT BUỘC không đánh giá chủ quan",
            "BẮT BUỘC không tự ý sửa đổi .cursorrc",
            "BẮT BUỘC không tự ý giải thích quy tắc",
            "BẮT BUỘC không thương lượng quy tắc",
            "BẮT BUỘC không ghi đè quy tắc",
            "BẮT BUỘC không bỏ qua quy tắc",
            "BẮT BUỘC không phớt lờ quy tắc"
          ]
        }
      }
    }
  },
  
  "project": {
    "name": "Diamondchain - SnipeBot DeFi",
    "description": "Bot giao dịch DeFi thông minh hỗ trợ đa blockchain với các tính năng cao cấp",
    "version": "0.1.0",
    "authors": ["Diamond Chain Team"],
    "license": "MIT",
    "year": "2023"
  },
  
  "patterns": {
    "*": {
      "naming": {
        "variables": "snake_case",
        "functions": "snake_case",
        "types": "PascalCase",
        "constants": "SCREAMING_SNAKE_CASE",
        "modules": "snake_case"
      },
      "formatting": {
        "indentation": 4,
        "line_length": 100,
        "trailing_comma": true
      },
      "imports": {
        "order": [
          "// External imports",
          "use ethers::{...};",
          "",
          "// Standard library imports", 
          "use std::{...};",
          "",
          "// Internal imports",
          "use crate::{...};",
          "",
          "// Third party imports",
          "use anyhow::{...};",
          "use tracing::{...};"
        ],
        "grouping": "Nhóm các import theo nguồn gốc và chức năng",
        "nesting": "Sử dụng nested imports để giảm số lượng dòng",
        "explicit_imports": "Import trực tiếp từ module gốc trong các file source",
        "reexports": "Sử dụng re-export có chọn lọc trong mod.rs để tổ chức module",
        "unused_imports": "Xóa các import không sử dụng",
        "self_import": "Không sử dụng self trong import trừ khi cần thiết",
        "single_component": "Không import trực tiếp từ crate root (ví dụ: use tokio;)",
        "redundant_imports": "Xóa các import trùng lặp hoặc thừa"
      },
      "error_handling": {
        "unwrap": "Tránh dùng .unwrap(), .expect() trừ khi có lý do chính đáng",
        "unused_imports": "Loại bỏ use xxx không được dùng sau khi refactor",
        "trailing_whitespace": "Không được để trailing whitespace hoặc dòng trắng dư cuối file",
        "redundant_clone": "Tránh redundant clone/copy nếu không cần thiết"
      }
    },
    
    "async": {
      "*": {
        "error_handling": "Sử dụng anyhow::Result và ? operator",
        "retry": "Sử dụng retry_policy và exponential backoff",
        "timeout": "Sử dụng tokio::time::timeout cho các thao tác có thể bị treo"
      },
      "thread_safety": {
        "trait_bounds": "Luôn thêm Send + Sync + 'static cho các trait objects trong async context",
        "closure_bounds": "Thêm Send + Sync cho các closure được truyền qua thread",
        "async_trait": "Sử dụng #[async_trait] cho các trait có phương thức async",
        "clone_before_async": "Clone dữ liệu trước khi đưa vào closure async để tránh vấn đề lifetime",
        "standalone_functions": "Sử dụng hàm độc lập thay vì closure để đảm bảo kiểu fn pointer phù hợp",
        "arc_usage": "Sử dụng Arc<T> để chia sẻ dữ liệu giữa các task",
        "mutex_rwlock": "Sử dụng Mutex cho write frequent, RwLock cho read frequent",
        "tokio_types": "Ưu tiên sử dụng tokio::sync::Mutex thay vì std::sync::Mutex trong async code"
      }
    },
    
    "traits": {
      "*": {
        "trait_bounds": "Luôn thêm Send + Sync + 'static cho trait objects được sử dụng qua Arc hoặc trong multithreaded context",
        "object_safety": "Kiểm tra object safety cho các trait (không có generic type parameters, không có Sized bound)",
        "trait_implementation": "Triển khai đầy đủ tất cả các phương thức bắt buộc",
        "explicit_bounds": "Chỉ rõ bounds như Send + Sync + 'static khi khai báo trait dùng trong context đa luồng",
        "async_trait_macro": "Sử dụng #[async_trait] cho các trait có phương thức async",
        "trait_object_usage": "Sử dụng Box<dyn Trait> cho các trait object có phương thức async",
        "result_type": "Luôn chỉ rõ cả 2 generic type cho Result<T, E>",
        "async_trait_import": "Luôn import async_trait::async_trait trước khi sử dụng #[async_trait]",
        "async_trait_macro": "Sử dụng #[async_trait] cho các trait có phương thức async",
        "trait_object_usage": "Sử dụng Box<dyn Trait> cho các trait object có phương thức async"
      }
    },
    
    "structs": {
      "*": {
        "field_initialization": "Khởi tạo đầy đủ tất cả các trường của struct",
        "default_values": "Cung cấp Default impl hoặc builder pattern cho struct phức tạp",
        "field_naming": "Đảm bảo tên trường nhất quán giữa các phiên bản struct",
        "field_documentation": "Thêm doc comments cho các trường phức tạp",
        "constructor_params": "Kiểm tra các tham số đầu vào của hàm khởi tạo",
        "unified_struct_definition": "Đảm bảo chỉ có một định nghĩa struct trong toàn bộ codebase, sử dụng type alias nếu cần",
        "consistent_field_types": "Sử dụng kiểu dữ liệu nhất quán cho các trường có cùng mục đích",
        "complete_initialization": "Đảm bảo tất cả các trường đều được khởi tạo trong hàm new()"
      }
    },
    
    "caching": {
      "*": {
        "standard_cache_entry": "Sử dụng struct CacheEntry có các trường value và expires_at",
        "cache_synchronization": "Sử dụng RwLock cho đồng bộ hóa cache trong môi trường đa luồng",
        "cache_method_naming": "Đặt tên các phương thức cache là get_from_cache và store_in_cache",
        "consistent_cache_ttl": "Sử dụng TTL nhất quán và có thể cấu hình cho các entry cache",
        "cache_cleanup": "Triển khai phương thức cleanup_cache để định kỳ xóa các entry hết hạn"
      },
      "standard_entry": {
        "struct": "pub struct CacheEntry<T> { pub value: T, pub expires_at: Instant }",
        "methods": [
          "new(value: T, ttl_seconds: u64) -> Self",
          "is_expired(&self) -> bool"
        ]
      },
      "cache_field": "cache: RwLock<HashMap<String, CacheEntry<T>>>",
      "cache_methods": [
        "get_from_cache<T>(&self, key: &str) -> Option<T>",
        "store_in_cache<T>(&self, key: &str, value: &T, ttl_seconds: u64) -> Result<()>",
        "cleanup_cache(&self)"
      ],
      "ttl_management": "Sử dụng Instant::now() + Duration::from_secs(ttl) cho expires_at"
    },
    
    "error_handling": {
      "*": {
        "error_types": {
          "blockchain_errors": "Sử dụng enum BlockchainError để phân loại lỗi blockchain",
          "retryable_errors": "Xác định rõ các lỗi có thể retry (timeout, connection refused, rate limit)",
          "non_retryable_errors": "Xác định rõ các lỗi không thể retry (insufficient funds, invalid nonce)",
          "error_context": "Sử dụng context() hoặc with_context() để thêm thông tin cho lỗi",
          "error_categories": "Phân loại lỗi thành các nhóm rõ ràng",
          "error_severity": "Xác định mức độ nghiêm trọng của lỗi",
          "error_recovery": "Xác định chiến lược phục hồi cho từng loại lỗi",
          "error_metrics": "Thu thập metrics về các loại lỗi"
        },
        "error_propagation": {
          "use_anyhow": "Sử dụng anyhow::Result cho các hàm thư viện",
          "use_thiserror": "Sử dụng thiserror cho các enum lỗi public",
          "error_transmutation": "Chuyển đổi lỗi cụ thể thành anyhow::Error khi cần",
          "error_wrapping": "Bọc lỗi với context thích hợp trước khi truyền lên",
          "error_logging": "Log đầy đủ thông tin lỗi và stack trace",
          "error_tracing": "Sử dụng tracing để theo dõi luồng lỗi",
          "error_metrics": "Thu thập metrics về lỗi",
          "error_alerting": "Cảnh báo khi có lỗi nghiêm trọng"
        },
        "error_recovery": {
          "circuit_breaker": "Sử dụng circuit breaker để tránh thử lại quá nhiều",
          "fallback_providers": "Có sẵn danh sách provider dự phòng",
          "gas_adjustment": "Tự động điều chỉnh gas price dựa trên loại lỗi",
          "nonce_management": "Quản lý nonce đúng cách để tránh lỗi invalid nonce",
          "retry_strategy": "Xác định chiến lược retry cho từng loại lỗi",
          "backoff_strategy": "Sử dụng exponential backoff với jitter",
          "timeout_handling": "Xử lý timeout đúng cách",
          "rate_limit_handling": "Xử lý rate limit đúng cách"
        },
        "result_type": "Sử dụng anyhow::Result cho các hàm thư viện, Result<T, E> cho các enum lỗi public"
      }
    },
    
    "retry_policy": {
      "*": {
        "configuration": {
          "max_retries": "Giới hạn số lần retry tối đa (mặc định: 5)",
          "backoff_strategy": "Sử dụng exponential backoff với jitter",
          "max_retry_time": "Giới hạn thời gian retry tổng cộng",
          "retryable_errors": "Danh sách các lỗi có thể retry",
          "circuit_breaker": "Cấu hình circuit breaker cho từng endpoint"
        },
        "implementation": {
          "exponential_backoff": "Sử dụng exponential backoff với jitter ngẫu nhiên",
          "circuit_breaker": "Triển khai circuit breaker để tránh thử lại quá nhiều",
          "metrics_collection": "Thu thập metrics về retry (số lần, thời gian, loại lỗi)",
          "logging": "Ghi log chi tiết về các lần retry",
          "gas_optimization": "Tự động điều chỉnh gas price dựa trên loại lỗi"
        },
        "best_practices": {
          "clone_before_retry": "Clone dữ liệu trước khi retry để tránh vấn đề lifetime",
          "separate_retry_logic": "Tách logic retry thành module riêng",
          "use_async_trait": "Sử dụng #[async_trait] cho các trait có phương thức async",
          "proper_error_handling": "Xử lý lỗi đúng cách trong quá trình retry",
          "metrics_tracking": "Theo dõi metrics về hiệu suất retry"
        }
      }
    },
    
    "security": {
      "*": {
        "encryption": {
          "aes_gcm": "Sử dụng AES-GCM theo đúng chuẩn với nonce duy nhất",
          "argon2id": "Triển khai đúng Argon2id để bảo vệ mật khẩu",
          "key_management": "Sử dụng KeyInit thay vì NewAead đã lỗi thời"
        },
        "sensitive_data": {
          "zeroize": "Sử dụng Zeroize và ZeroizeOnDrop đúng cách",
          "memory_cleanup": "Triển khai Drop để xóa dữ liệu từ bộ nhớ",
          "no_public_sensitive": "Tránh public các thuộc tính nhạy cảm"
        },
        "authentication": {
          "format_checking": "Kiểm tra format tốt hơn cho private key và địa chỉ",
          "error_messages": "Xử lý lỗi chi tiết hơn với thông báo rõ ràng"
        }
      }
    },
    
    "performance": {
      "*": {
        "caching": {
          "wallet_cache": "Sử dụng HashMap để lưu cache các ví đã tải",
          "lazy_loading": "Chỉ tải từ storage khi cần thiết",
          "cache_ttl": "Thiết lập thời gian sống cho cache entries"
        },
        "error_handling": {
          "error_classification": "Phân loại lỗi để quyết định có thử lại không",
          "error_suggestions": "Cung cấp gợi ý khắc phục lỗi chi tiết"
        },
        "thread_safety": {
          "rwlock_usage": "Sử dụng RwLock cho đọc song song, ghi độc quyền",
          "async_mutex": "Sử dụng AsyncMutex cho các operation bất đồng bộ",
          "semaphore": "Sử dụng semaphore để giới hạn số lượng tác vụ chạy đồng thời"
        }
      }
    },
    
    "testing": {
      "*": {
        "unit_tests": {
          "coverage": "Kiểm thử tất cả path code",
          "fuzzing": "Sử dụng fuzzing test để phát hiện lỗi logic",
          "error_paths": "Kiểm thử các path lỗi và edge cases"
        },
        "logging": {
          "operation_logs": "Thêm log chi tiết cho các operation quan trọng",
          "debug_info": "Cung cấp thông tin để debug khi cần",
          "error_tracing": "Log đầy đủ thông tin lỗi và stack trace"
        }
      }
    },
    
    "mev_protection": {
      "*": {
        "detection": {
          "sandwich_attack": "Triển khai heuristics để phát hiện sandwich attack",
          "frontrunning": "Phát hiện frontrunning dựa trên gas price và thứ tự giao dịch",
          "arbitrage": "Phát hiện arbitrage dựa trên mẫu giao dịch"
        },
        "prevention": {
          "gas_optimization": "Tối ưu gas price để tránh frontrunning",
          "transaction_ordering": "Quản lý thứ tự giao dịch để tránh sandwich",
          "slippage_protection": "Bảo vệ khỏi slippage cao"
        }
      }
    },
    
    "nonce_management": {
      "*": {
        "implementation": {
          "nonce_manager": "Triển khai NonceManager để quản lý nonce",
          "auto_reset": "Tự động reset nonce khi gặp lỗi nonce",
          "caching": "Cache nonce với thời gian hết hạn",
          "integration": "Tích hợp với ChainAdapter để quản lý giao dịch"
        },
        "error_handling": {
          "duplicate_detection": "Phát hiện và xử lý giao dịch trùng lặp",
          "nonce_error_recovery": "Cơ chế phục hồi khi gặp lỗi nonce",
          "retry_strategy": "Chiến lược retry cho lỗi nonce"
        }
      }
    },
    
    "time_handling": {
      "*": {
        "implementation": {
          "safe_timestamp": "Xử lý an toàn khi lấy timestamp",
          "fallback_values": "Cung cấp giá trị mặc định an toàn",
          "error_handling": "Xử lý lỗi khi không thể lấy thời gian hệ thống"
        },
        "conversion": {
          "safe_conversion": "Kiểm tra giới hạn và tràn số khi chuyển đổi",
          "saturating_ops": "Sử dụng saturating_sub để ngăn tràn số",
          "nan_handling": "Xử lý các giá trị f64 không hợp lệ"
        }
      }
    },
    
    "ethers_types": {
      "*": {
        "u64_handling": "Không sử dụng map() trực tiếp trên U64, sử dụng as_u64() để chuyển đổi",
        "h160_handling": "Không sử dụng unwrap_or_default() trên H160, sử dụng map() để xử lý Option",
        "u256_handling": "Sử dụng U256::zero() thay vì U256::from(0)",
        "address_handling": "Sử dụng to_string() để chuyển đổi Address thành String",
        "hash_handling": "Sử dụng to_string() để chuyển đổi H256 thành String"
      }
    },
    
    "variables": {
      "*": {
        "unused_variables": "Đặt tên biến không sử dụng với tiền tố _",
        "variable_naming": "Sử dụng snake_case cho tên biến",
        "variable_scope": "Giới hạn phạm vi biến trong scope nhỏ nhất có thể",
        "variable_initialization": "Khởi tạo biến với giá trị mặc định hợp lý"
      }
    }
  },
  
  "types": {
    "blockchain": {
      "*": [
        "Address - ethers::types::Address",
        "U256 - ethers::types::U256",
        "H256 - ethers::types::H256",
        "TransactionReceipt - ethers::types::TransactionReceipt",
        "Provider<Http> - ethers::providers::Provider<Http>",
        "Contract<Provider<Http>> - ethers::contract::Contract<Provider<Http>>",
        "TypedTransaction - ethers::types::transaction::eip2718::TypedTransaction",
        "TransactionRequest - ethers::types::TransactionRequest"
      ]
    },
    "custom": {
      "*": [
        "ChainConfig - Cấu hình cho blockchain",
        "ChainAdapter - Interface cho các blockchain khác nhau",
        "EVMAdapter - Adapter cho mạng EVM",
        "Transaction - Thông tin giao dịch blockchain",
        "WalletConfig - Cấu hình ví",
        "EndpointInfo - Thông tin RPC endpoint",
        "RetryPolicy - Chính sách thử lại cho RPC",
        "RPCConnectionPool - Pool kết nối RPC",
        "AIModel - Interface cho các mô hình AI",
        "TokenInfo - Thông tin token",
        "Config - Cấu hình chung của ứng dụng",
        "RetryConfig - Cấu hình cho retry policy",
        "RiskAnalyzer - Phân tích rủi ro token (trait object yêu cầu Send + Sync)",
        "TokenRiskAnalysis - Kết quả phân tích rủi ro token"
      ]
    },
    "collections": {
      "*": [
        "HashMap<K, V> - Bảng băm key-value",
        "Vec<T> - Danh sách linh động",
        "Option<T> - Giá trị tùy chọn",
        "Result<T, E> - Kết quả có thể lỗi",
        "Arc<T> - Atomic reference counted pointer",
        "RwLock<T> - Reader-writer lock",
        "Mutex<T> - Mutual exclusion primitive",
        "VecDeque<T> - Double-ended queue",
        "Weak<T> - Weak reference to Arc<T>"
      ]
    }
  },
  
  "modules": {
    "*": {
      "chain_adapters": {
        "description": "Các adapter cho các blockchain khác nhau",
        "dependencies": [
          "common/src/chain_adapter.rs",
          "common/src/types.rs",
          "common/src/error.rs"
        ],
        "rules": {
          "mod_resolution": "Mỗi mod xxx; phải dẫn tới đúng file/module tương ứng (xxx.rs hoặc xxx/mod.rs)",
          "violation_consequence": "Không được phép merge nếu mod không resolve được"
        }
      },
      "wallet": {
        "description": "Quản lý ví và khóa bảo mật",
        "dependencies": [
          "common/src/security.rs",
          "common/src/types.rs",
          "common/src/error.rs",
          "wallet/src/secure_storage.rs",
          "wallet/src/wallet.rs",
          "wallet/src/farm.rs",
          "wallet/src/defi.rs",
          "wallet/src/config.rs"
        ]
      },
      "blockchain": {
        "description": "Tương tác với blockchain",
        "dependencies": [
          "common/src/chain_adapter.rs",
          "common/src/network.rs",
          "common/src/types.rs",
          "blockchain/src/lib.rs",
          "blockchain/src/mining/",
          "blockchain/src/grpc/",
          "blockchain/src/farming/",
          "blockchain/src/diamond_token/",
          "blockchain/src/depin/",
          "blockchain/src/crosschain/",
          "blockchain/src/abi/",
          "blockchain/src/marketplace/",
          "blockchain/src/nft/"
        ]
      },
      "network": {
        "description": "Kết nối mạng và RPC",
        "dependencies": [
          "common/src/network.rs",
          "common/src/retry_policy.rs",
          "common/src/error.rs"
        ]
      },
      "snipebot": {
        "description": "Bot giao dịch tự động",
        "dependencies": [
          "common/src/task_manager.rs",
          "common/src/worker.rs",
          "common/src/scheduler.rs",
          "common/src/executor.rs",
          "snipebot/src/trade/trade_logic.rs",
          "snipebot/src/snipebot.rs",
          "snipebot/src/trade/token_status.rs",
          "snipebot/src/config.rs", 
          "snipebot/src/api.rs",
          "snipebot/src/types.rs",
          "snipebot/src/auto_tuning.rs",
          "snipebot/src/storage.rs",
          "snipebot/src/rate_limit.rs",
          "snipebot/src/trade/mempool.rs",
          "snipebot/src/trade/gas_optimizer.rs",
          "snipebot/src/risk_analyzer.rs",
          "snipebot/src/wallet_manager.rs",
          "snipebot/src/blockchain.rs",
          "snipebot/src/AIModule.rs",
          "snipebot/src/connection_manager.rs",
          "snipebot/src/trade/MonteEquilibrium.rs",
          "snipebot/src/flashbots.rs",
          "snipebot/src/chain_adapters/base.rs",
          "snipebot/src/chain_adapters/connection_pool.rs",
          "snipebot/src/chain_adapters/mod.rs",
          "snipebot/src/ai_coordinator.rs",
          "snipebot/src/health_monitor.rs",
          "snipebot/src/module_manager.rs",
          "snipebot/src/trade_executor.rs",
          "common/src/cache.rs",
          "common/src/subscription.rs",
          "common/src/retry_policy.rs"
        ]
      },
      "common": {
        "description": "Các tiện ích và cấu trúc dữ liệu chung",
        "dependencies": [
          "common/src/types.rs",
          "common/src/utils.rs",
          "common/src/chain_adapter.rs",
          "common/src/lib.rs",
          "common/src/error.rs",
          "common/src/worker.rs",
          "common/src/validator.rs",
          "common/src/executor.rs",
          "common/src/scheduler.rs",
          "common/src/state_manager.rs",
          "common/src/task_manager.rs",
          "common/src/config.rs",
          "common/src/event_handler.rs",
          "common/src/security.rs",
          "common/src/logger.rs",
          "common/src/metrics.rs",
          "common/src/cache.rs",
          "common/src/equilibrium.rs",
          "common/src/retry_policy.rs",
          "common/src/diamond_manager.rs",
          "common/src/ai.rs",
          "common/src/monte_equilibrium.rs",
          "common/src/subscription.rs",
          "common/src/user.rs",
          "common/src/models/mod.rs", 
          "common/src/models/transaction.rs",
          "common/src/models/user.rs",
          "common/src/models/block.rs",
          "common/src/models/wallet.rs",
          "common/src/models/chain.rs",
          "common/src/middleware/mod.rs",
          "common/src/middleware/middleware.rs",
          "common/src/middleware/auth.rs",
          "common/src/middleware/core.rs",
          "common/src/middleware/rate_limit.rs",
          "common/src/network/mod.rs",
          "common/src/network/models.rs",
          "common/src/network/error.rs",
          "common/src/network/server.rs",
          "common/src/network/types.rs",
          "common/src/network/utils.rs",
          "common/src/network/config.rs",
          "common/src/network/message.rs",
          "common/src/network/lib.rs"
        ]
      },
      "middleware": {
        "description": "Các middleware cho API",
        "dependencies": [
          "common/src/middleware.rs",
          "common/src/error.rs"
        ]
      },
      "ai": {
        "description": "Các mô hình AI và phân tích dữ liệu",
        "dependencies": [
          "common/src/types.rs",
          "common/src/models.rs",
          "common/src/error.rs"
        ]
      },
      "diamond_manager": {
        "description": "Quản trị hệ thống và hợp đồng Diamond",
        "dependencies": [
          "common/src/chain_adapter.rs",
          "common/src/types.rs",
          "common/src/error.rs"
        ]
      },
      "connections": {
        "description": "Quản lý các kết nối RPC",
        "dependencies": [
          "common/src/network.rs",
          "common/src/retry_policy.rs",
          "common/src/error.rs"
        ]
      },
      "utils": {
        "description": "Tiện ích và hàm hỗ trợ",
        "dependencies": [
          "common/src/utils.rs",
          "common/src/types.rs",
          "common/src/error.rs"
        ]
      },
      "error_handling": {
        "description": "Xử lý lỗi và retry",
        "dependencies": [
          "common/src/error.rs",
          "common/src/retry_policy.rs",
          "common/src/error_handler.rs"
        ]
      },
      "api": {
        "description": "RESTful API endpoints",
        "dependencies": [
          "common/src/types.rs",
          "common/src/models.rs",
          "common/src/error.rs"
        ]
      },
      "risk_analyzer": {
        "description": "Phân tích rủi ro token",
        "dependencies": [
          "common/src/risk_analyzer.rs",
          "common/src/types.rs",
          "common/src/error.rs"
        ]
      },
      "MonteEquilibrium": {
        "description": "Tối ưu hóa giao dịch theo lý thuyết trò chơi",
        "dependencies": [
          "common/src/equilibrium.rs",
          "common/src/types.rs",
          "common/src/error.rs"
        ]
      }
    }
  },
  
  "editor": {
    "*": {
      "tab_size": 4,
      "ruler": 100,
      "formatOnSave": true,
      "match_extensions": [".rs", ".toml"],
      "ignored_folders": ["target", ".git", "logs"]
    }
  },
  
  "commands": {
    "cargo": {
      "*": {
        "clippy": "cd {directory}; cargo clippy --package {package} --lib -- -D warnings",
        "clippy_all": "cargo clippy -- -D warnings",
        "build": "cd {directory}; cargo build",
        "test": "cd {directory}; cargo test",
        "run": "cd {directory}; cargo run",
        "check": "cd {directory}; cargo check",
        "fmt": "cd {directory}; cargo fmt",
        "fix": "cd {directory}; cargo fix --allow-dirty"
      }
    }
  },
  
  "structure": {
    "workspace": {
      "*": {
        "common": {
          "description": "Thư viện chung và utilities",
          "files": [
            "src/lib.rs",
            "src/types.rs",
            "src/utils.rs", 
            "src/error.rs",
            "src/chain_adapter.rs",
            "src/worker.rs",
            "src/validator.rs",
            "src/executor.rs",
            "src/scheduler.rs",
            "src/state_manager.rs",
            "src/task_manager.rs",
            "src/config.rs",
            "src/event_handler.rs",
            "src/security.rs",
            "src/logger.rs",
            "src/metrics.rs",
            "src/cache.rs",
            "src/equilibrium.rs", 
            "src/retry_policy.rs",
            "src/diamond_manager.rs",
            "src/ai.rs",
            "src/monte_equilibrium.rs",
            "src/subscription.rs",
            "src/user.rs",
            "src/models/mod.rs",
            "src/models/transaction.rs",
            "src/models/user.rs", 
            "src/models/block.rs",
            "src/models/wallet.rs",
            "src/models/chain.rs",
            "src/middleware/mod.rs",
            "src/middleware/middleware.rs",
            "src/middleware/auth.rs",
            "src/middleware/core.rs",
            "src/middleware/rate_limit.rs",
            "src/network/mod.rs",
            "src/network/models.rs",
            "src/network/error.rs",
            "src/network/server.rs",
            "src/network/types.rs",
            "src/network/utils.rs",
            "src/network/config.rs",
            "src/network/message.rs",
            "src/network/lib.rs"
          ],
          "dependencies": []
        },
        "blockchain": {
          "description": "Tương tác với blockchain, Quản lý EIP-2535",
          "files": [
            "src/**/*.rs",
            "src/**/mod.rs",
            "src/**/lib.rs",
            "src/**/mining/**/*.rs",
            "src/**/grpc/**/*.rs",
            "src/**/farming/**/*.rs",
            "src/**/diamond_token/**/*.rs",
            "src/**/depin/**/*.rs",
            "src/**/crosschain/**/*.rs",
            "src/**/abi/**/*.rs",
            "src/**/marketplace/**/*.rs",
            "src/**/nft/**/*.rs"
          ],
          "dependencies": ["common"]
        },
        "wallet": {
          "description": "Quản lý ví an toàn",
          "files": [
            "src/**/*.rs",
            "src/**/mod.rs",
            "src/**/lib.rs",
            "src/**/secure_storage.rs",
            "src/**/wallet.rs",
            "src/**/farm.rs",
            "src/**/defi.rs",
            "src/**/config.rs"
          ],
          "dependencies": ["common"]
        },
        "snipebot": {
          "description": "Core logic của bot",
          "files": [
            "src/lib.rs",
            "src/main.rs",
            "src/snipebot.rs",
            "src/config.rs",
            "src/api.rs",
            "src/types.rs",
            "src/auto_tuning.rs", 
            "src/storage.rs",
            "src/rate_limit.rs",
            "src/connection_manager.rs",
            "src/flashbots.rs",
            "src/blockchain.rs",
            "src/AIModule.rs",
            "src/risk_analyzer.rs",
            "src/wallet_manager.rs",
            "src/ai_coordinator.rs",
            "src/health_monitor.rs",
            "src/module_manager.rs",
            "src/trade_executor.rs",
            "src/service.rs",
            "src/abi_utils.rs",
            "src/metric.rs",
            "src/event_bus.rs",
            "src/trade/trade_logic.rs",
            "src/trade/token_status.rs",
            "src/trade/mempool.rs",
            "src/trade/gas_optimizer.rs", 
            "src/trade/MonteEquilibrium.rs",
            "src/trade/transaction.rs",
            "src/trade/profit_models.rs",
            "src/trade/multichain.rs",
            "src/chain_adapters/mod.rs",
            "src/chain_adapters/base.rs",
            "src/chain_adapters/connection_pool.rs",
            "src/chain_adapters/retry_policy.rs",
            "src/chain_adapters/trait_adapter.rs",
            "src/chain_adapters/chain_traits.rs",
            "src/chain_adapters/wallet_integration.rs",
            "src/chain_adapters/chain_adapter_impl.rs",
            "src/chain_adapters/configs.rs",
            "src/chain_adapters/error_handler.rs",
            "src/chain_adapters/interfaces.rs",
            "src/chain_adapters/nonce_manager.rs",
            "src/chain_adapters/non_evm_adapter.rs",
            "src/chain_adapters/chain_registry.rs",
            "src/chain_adapters/retry.rs",
            "src/chain_adapters/adapter_registry.rs",
            "src/chain_adapters/eth.rs",
            "src/chain_adapters/monad.rs",
            "src/chain_adapters/avalanche.rs",
            "src/chain_adapters/bsc.rs",
            "src/chain_adapters/ethereum.rs",
            "src/chain_adapters/base_adapter.rs"
          ],
          "dependencies": ["common", "blockchain", "wallet"]
        },
        "network/wasm": {
          "description": "WebAssembly cho giao tiếp mạng",
          "files": [
            "src/**/*.rs",
            "src/**/mod.rs",
            "src/**/lib.rs",
            "src/**/network.rs",
            "src/**/wasm.rs"
          ],
          "dependencies": ["common"]
        },
        "diamond_manager": {
          "description": "Quản trị hệ thống",
          "files": [
            "src/**/*.rs",
            "src/**/mod.rs",
            "src/**/lib.rs",
            "src/**/diamond_manager.rs",
            "src/**/contracts.rs"
          ],
          "dependencies": ["common", "blockchain"]
        },
        "frontend": {
          "description": "Giao diện người dùng web",
          "files": [
            "src/**/*.rs",
            "src/**/mod.rs",
            "src/**/lib.rs",
            "src/**/frontend.rs",
            "src/**/ui.rs"
          ],
          "dependencies": ["network/wasm"]
        }
      }
    },
    "blockchain": {
      "*": {
        "chain": {
          "description": "Quản lý blockchain",
          "files": [
            "src/**/chain.rs",
            "src/**/chain/**/*.rs",
            "src/**/chain_adapter.rs",
            "src/**/chain_config.rs"
          ],
          "dependencies": ["common/chain_adapter", "common/types"]
        },
        "block": {
          "description": "Xử lý block",
          "files": [
            "src/**/block.rs",
            "src/**/block/**/*.rs",
            "src/**/block_header.rs",
            "src/**/block_body.rs"
          ],
          "dependencies": ["common/types", "common/models"]
        },
        "transaction": {
          "description": "Xử lý giao dịch",
          "files": [
            "src/**/transaction.rs",
            "src/**/transaction/**/*.rs",
            "src/**/tx_pool.rs",
            "src/**/tx_validator.rs"
          ],
          "dependencies": ["common/types", "common/models"]
        },
        "contract": {
          "description": "Tương tác với hợp đồng",
          "files": [
            "src/**/contract.rs",
            "src/**/contract/**/*.rs",
            "src/**/contract_call.rs",
            "src/**/contract_deploy.rs"
          ],
          "dependencies": ["common/types", "common/chain_adapter"]
        },
        "event": {
          "description": "Xử lý sự kiện",
          "files": [
            "src/**/event.rs",
            "src/**/event/**/*.rs",
            "src/**/event_listener.rs",
            "src/**/event_filter.rs"
          ],
          "dependencies": ["common/types", "common/models"]
        },
        "log": {
          "description": "Xử lý log",
          "files": [
            "src/**/log.rs",
            "src/**/log/**/*.rs",
            "src/**/log_parser.rs",
            "src/**/log_filter.rs"
          ],
          "dependencies": ["common/types", "common/models"]
        },
        "receipt": {
          "description": "Xử lý biên lai",
          "files": [
            "src/**/receipt.rs",
            "src/**/receipt/**/*.rs",
            "src/**/receipt_parser.rs",
            "src/**/receipt_validator.rs"
          ],
          "dependencies": ["common/types", "common/models"]
        },
        "gas": {
          "description": "Quản lý gas",
          "files": [
            "src/**/gas.rs",
            "src/**/gas/**/*.rs",
            "src/**/gas_estimator.rs",
            "src/**/gas_price.rs"
          ],
          "dependencies": ["common/types"]
        },
        "nonce": {
          "description": "Quản lý nonce",
          "files": [
            "src/**/nonce.rs",
            "src/**/nonce/**/*.rs",
            "src/**/nonce_manager.rs",
            "src/**/nonce_validator.rs"
          ],
          "dependencies": ["common/types"]
        },
        "balance": {
          "description": "Quản lý số dư",
          "files": [
            "src/**/balance.rs",
            "src/**/balance/**/*.rs",
            "src/**/balance_checker.rs",
            "src/**/balance_tracker.rs"
          ],
          "dependencies": ["common/types"]
        },
        "state": {
          "description": "Quản lý trạng thái",
          "files": [
            "src/**/state.rs",
            "src/**/state/**/*.rs",
            "src/**/state_manager.rs",
            "src/**/state_sync.rs"
          ],
          "dependencies": ["common/types"]
        }
      }
    },
    "wallet": {
      "*": {
        "wallet": {
          "description": "Quản lý ví",
          "files": [
            "src/**/wallet.rs",
            "src/**/wallet/**/*.rs",
            "src/**/wallet_manager.rs",
            "src/**/wallet_utils.rs"
          ],
          "dependencies": ["common/security", "common/types"]
        },
        "key": {
          "description": "Quản lý khóa",
          "files": [
            "src/**/key.rs",
            "src/**/key/**/*.rs",
            "src/**/key_manager.rs",
            "src/**/key_generator.rs"
          ],
          "dependencies": ["common/security", "common/types"]
        },
        "account": {
          "description": "Quản lý tài khoản",
          "files": [
            "src/**/account.rs",
            "src/**/account/**/*.rs",
            "src/**/account_manager.rs",
            "src/**/account_validator.rs"
          ],
          "dependencies": ["common/types", "common/models"]
        },
        "address": {
          "description": "Quản lý địa chỉ",
          "files": [
            "src/**/address.rs",
            "src/**/address/**/*.rs",
            "src/**/address_validator.rs",
            "src/**/address_generator.rs"
          ],
          "dependencies": ["common/types"]
        },
        "balance": {
          "description": "Quản lý số dư",
          "files": [
            "src/**/balance.rs",
            "src/**/balance/**/*.rs",
            "src/**/balance_checker.rs",
            "src/**/balance_tracker.rs"
          ],
          "dependencies": ["common/types"]
        },
        "transaction": {
          "description": "Quản lý giao dịch",
          "files": [
            "src/**/transaction.rs",
            "src/**/transaction/**/*.rs",
            "src/**/tx_signer.rs",
            "src/**/tx_validator.rs"
          ],
          "dependencies": ["common/types", "common/models"]
        },
        "signature": {
          "description": "Xử lý chữ ký",
          "files": [
            "src/**/signature.rs",
            "src/**/signature/**/*.rs",
            "src/**/signature_verifier.rs",
            "src/**/signature_generator.rs"
          ],
          "dependencies": ["common/security", "common/types"]
        },
        "keystore": {
          "description": "Quản lý keystore",
          "files": [
            "src/**/keystore.rs",
            "src/**/keystore/**/*.rs",
            "src/**/keystore_manager.rs",
            "src/**/keystore_encryption.rs"
          ],
          "dependencies": ["common/security", "common/types"]
        },
        "mnemonic": {
          "description": "Xử lý mnemonic",
          "files": [
            "src/**/mnemonic.rs",
            "src/**/mnemonic/**/*.rs",
            "src/**/mnemonic_generator.rs",
            "src/**/mnemonic_validator.rs"
          ],
          "dependencies": ["common/security", "common/types"]
        },
        "private_key": {
          "description": "Quản lý private key",
          "files": [
            "src/**/private_key.rs",
            "src/**/private_key/**/*.rs",
            "src/**/private_key_manager.rs",
            "src/**/private_key_encryption.rs"
          ],
          "dependencies": ["common/security", "common/types"]
        },
        "public_key": {
          "description": "Quản lý public key",
          "files": [
            "src/**/public_key.rs",
            "src/**/public_key/**/*.rs",
            "src/**/public_key_manager.rs",
            "src/**/public_key_validator.rs"
          ],
          "dependencies": ["common/security", "common/types"]
        },
        "seed": {
          "description": "Quản lý seed",
          "files": [
            "src/**/seed.rs",
            "src/**/seed/**/*.rs",
            "src/**/seed_generator.rs",
            "src/**/seed_validator.rs"
          ],
          "dependencies": ["common/security", "common/types"]
        },
        "password": {
          "description": "Xử lý mật khẩu",
          "files": [
            "src/**/password.rs",
            "src/**/password/**/*.rs",
            "src/**/password_manager.rs",
            "src/**/password_validator.rs"
          ],
          "dependencies": ["common/security"]
        },
        "encryption": {
          "description": "Mã hóa dữ liệu",
          "files": [
            "src/**/encryption.rs",
            "src/**/encryption/**/*.rs",
            "src/**/encryption_manager.rs",
            "src/**/encryption_utils.rs"
          ],
          "dependencies": ["common/security"]
        },
        "decryption": {
          "description": "Giải mã dữ liệu",
          "files": [
            "src/**/decryption.rs",
            "src/**/decryption/**/*.rs",
            "src/**/decryption_manager.rs",
            "src/**/decryption_utils.rs"
          ],
          "dependencies": ["common/security"]
        },
        "backup": {
          "description": "Sao lưu dữ liệu",
          "files": [
            "src/**/backup.rs",
            "src/**/backup/**/*.rs",
            "src/**/backup_manager.rs",
            "src/**/backup_validator.rs"
          ],
          "dependencies": ["common/security"]
        },
        "restore": {
          "description": "Khôi phục dữ liệu",
          "files": [
            "src/**/restore.rs",
            "src/**/restore/**/*.rs",
            "src/**/restore_manager.rs",
            "src/**/restore_validator.rs"
          ],
          "dependencies": ["common/security"]
        },
        "import": {
          "description": "Nhập dữ liệu",
          "files": [
            "src/**/import.rs",
            "src/**/import/**/*.rs",
            "src/**/import_manager.rs",
            "src/**/import_validator.rs"
          ],
          "dependencies": ["common/security"]
        },
        "export": {
          "description": "Xuất dữ liệu",
          "files": [
            "src/**/export.rs",
            "src/**/export/**/*.rs",
            "src/**/export_manager.rs",
            "src/**/export_validator.rs"
          ],
          "dependencies": ["common/security"]
        },
        "verify": {
          "description": "Xác thực dữ liệu",
          "files": [
            "src/**/verify.rs",
            "src/**/verify/**/*.rs",
            "src/**/verify_manager.rs",
            "src/**/verify_validator.rs"
          ],
          "dependencies": ["common/security"]
        }
      }
    }
  },
  
  "development_workflow": {
    "*": {
      "code_review": {
        "checklist": [
          "Kiểm tra quy tắc đặt tên",
          "Kiểm tra thread safety",
          "Kiểm tra error handling",
          "Kiểm tra async patterns",
          "Kiểm tra documentation"
        ]
      },
      "testing": {
        "unit_tests": "Viết unit test cho các hàm quan trọng",
        "integration_tests": "Viết integration test cho các module",
        "benchmarks": "Thêm benchmarks cho các hàm performance-critical"
      },
      "documentation": {
        "code_comments": "Thêm doc comments cho các struct và trait",
        "api_docs": "Cập nhật API documentation",
        "examples": "Thêm ví dụ sử dụng"
      },
      "security_review": {
        "checklist": [
          "Kiểm tra mã hóa và bảo mật dữ liệu",
          "Kiểm tra xử lý dữ liệu nhạy cảm",
          "Kiểm tra cơ chế xác thực",
          "Kiểm tra quản lý khóa và mật khẩu"
        ]
      },
      "performance_review": {
        "checklist": [
          "Kiểm tra cơ chế caching",
          "Kiểm tra xử lý lỗi và retry",
          "Kiểm tra thread safety",
          "Kiểm tra deadlock prevention"
        ]
      },
      "mev_protection": {
        "checklist": [
          "Kiểm tra phát hiện sandwich attack",
          "Kiểm tra phát hiện frontrunning",
          "Kiểm tra phát hiện arbitrage",
          "Kiểm tra cơ chế bảo vệ"
        ]
      }
    }
  },
  
  "common_errors": {
    "*": {
      "mutable_borrow": "Clone dữ liệu trước khi mượn mutable",
      "lifetime": "Sử dụng Arc<T> để chia sẻ dữ liệu giữa các task",
      "thread_safety": "Thêm Send + Sync cho trait objects",
      "async_await": "Clone dữ liệu trước khi gọi .await"
    }
  }
}